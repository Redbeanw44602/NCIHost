/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class cc_ioctl_nfcncihost_daemon_IpcNativeHandler */

#ifndef _Included_cc_ioctl_nfcncihost_daemon_IpcNativeHandler
#define _Included_cc_ioctl_nfcncihost_daemon_IpcNativeHandler
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     cc_ioctl_nfcncihost_daemon_IpcNativeHandler
 * Method:    ntInitForSocketDir
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_cc_ioctl_nfcncihost_daemon_IpcNativeHandler_ntInitForSocketDir
  (JNIEnv *, jclass, jstring);

/*
 * Class:     cc_ioctl_nfcncihost_daemon_IpcNativeHandler
 * Method:    ntPeekConnection
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_cc_ioctl_nfcncihost_daemon_IpcNativeHandler_ntPeekConnection
  (JNIEnv *, jclass);

/*
 * Class:     cc_ioctl_nfcncihost_daemon_IpcNativeHandler
 * Method:    ntRequestConnection
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_cc_ioctl_nfcncihost_daemon_IpcNativeHandler_ntRequestConnection
  (JNIEnv *, jclass);

/*
 * Class:     cc_ioctl_nfcncihost_daemon_IpcNativeHandler
 * Method:    ntWaitForConnection
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_cc_ioctl_nfcncihost_daemon_IpcNativeHandler_ntWaitForConnection
  (JNIEnv *, jclass, jint);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class cc_ioctl_nfcncihost_daemon_IpcNativeHandler_IpcConnectionListener */

#ifndef _Included_cc_ioctl_nfcncihost_daemon_IpcNativeHandler_IpcConnectionListener
#define _Included_cc_ioctl_nfcncihost_daemon_IpcNativeHandler_IpcConnectionListener
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class cc_ioctl_nfcncihost_daemon_internal_NciHostDaemonProxy */

#ifndef _Included_cc_ioctl_nfcncihost_daemon_internal_NciHostDaemonProxy
#define _Included_cc_ioctl_nfcncihost_daemon_internal_NciHostDaemonProxy
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     cc_ioctl_nfcncihost_daemon_internal_NciHostDaemonProxy
 * Method:    isConnected
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_cc_ioctl_nfcncihost_daemon_internal_NciHostDaemonProxy_isConnected
  (JNIEnv *, jobject);

/*
 * Class:     cc_ioctl_nfcncihost_daemon_internal_NciHostDaemonProxy
 * Method:    getVersionName
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_cc_ioctl_nfcncihost_daemon_internal_NciHostDaemonProxy_getVersionName
  (JNIEnv *, jobject);

/*
 * Class:     cc_ioctl_nfcncihost_daemon_internal_NciHostDaemonProxy
 * Method:    getVersionCode
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_cc_ioctl_nfcncihost_daemon_internal_NciHostDaemonProxy_getVersionCode
  (JNIEnv *, jobject);

/*
 * Class:     cc_ioctl_nfcncihost_daemon_internal_NciHostDaemonProxy
 * Method:    getBuildUuid
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_cc_ioctl_nfcncihost_daemon_internal_NciHostDaemonProxy_getBuildUuid
  (JNIEnv *, jobject);

/*
 * Class:     cc_ioctl_nfcncihost_daemon_internal_NciHostDaemonProxy
 * Method:    exitProcess
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_cc_ioctl_nfcncihost_daemon_internal_NciHostDaemonProxy_exitProcess
  (JNIEnv *, jobject);

/*
 * Class:     cc_ioctl_nfcncihost_daemon_internal_NciHostDaemonProxy
 * Method:    isDeviceSupported
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_cc_ioctl_nfcncihost_daemon_internal_NciHostDaemonProxy_isDeviceSupported
  (JNIEnv *, jobject);

/*
 * Class:     cc_ioctl_nfcncihost_daemon_internal_NciHostDaemonProxy
 * Method:    isHwServiceConnected
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_cc_ioctl_nfcncihost_daemon_internal_NciHostDaemonProxy_isHwServiceConnected
  (JNIEnv *, jobject);

/*
 * Class:     cc_ioctl_nfcncihost_daemon_internal_NciHostDaemonProxy
 * Method:    initHwServiceConnection
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_cc_ioctl_nfcncihost_daemon_internal_NciHostDaemonProxy_initHwServiceConnection
  (JNIEnv *, jobject, jstring);

/*
 * Class:     cc_ioctl_nfcncihost_daemon_internal_NciHostDaemonProxy
 * Method:    waitForEvent
 * Signature: ()Lcc/ioctl/nfcncihost/daemon/internal/NciHostDaemonProxy/NativeEventPacket;
 */
JNIEXPORT jobject JNICALL Java_cc_ioctl_nfcncihost_daemon_internal_NciHostDaemonProxy_waitForEvent
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class cc_ioctl_nfcncihost_daemon_internal_NciHostDaemonProxy_IoEventPacket */

#ifndef _Included_cc_ioctl_nfcncihost_daemon_internal_NciHostDaemonProxy_IoEventPacket
#define _Included_cc_ioctl_nfcncihost_daemon_internal_NciHostDaemonProxy_IoEventPacket
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class cc_ioctl_nfcncihost_daemon_internal_NciHostDaemonProxy_RemoteDeathPacket */

#ifndef _Included_cc_ioctl_nfcncihost_daemon_internal_NciHostDaemonProxy_RemoteDeathPacket
#define _Included_cc_ioctl_nfcncihost_daemon_internal_NciHostDaemonProxy_RemoteDeathPacket
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class cc_ioctl_nfcncihost_daemon_internal_NciHostDaemonProxy_NativeEventPacket */

#ifndef _Included_cc_ioctl_nfcncihost_daemon_internal_NciHostDaemonProxy_NativeEventPacket
#define _Included_cc_ioctl_nfcncihost_daemon_internal_NciHostDaemonProxy_NativeEventPacket
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
